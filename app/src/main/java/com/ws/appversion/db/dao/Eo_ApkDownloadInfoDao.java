package com.ws.appversion.db.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.ws.appversion.db.bean.Eo_ApkDownloadInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "EO__APK_DOWNLOAD_INFO".
*/
public class Eo_ApkDownloadInfoDao extends AbstractDao<Eo_ApkDownloadInfo, Long> {

    public static final String TABLENAME = "EO__APK_DOWNLOAD_INFO";

    /**
     * Properties of entity Eo_ApkDownloadInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Apkid = new Property(1, Long.class, "apkid", false, "APKID");
        public final static Property AppFilePath = new Property(2, String.class, "appFilePath", false, "APP_FILE_PATH");
        public final static Property App_name = new Property(3, String.class, "app_name", false, "APP_NAME");
        public final static Property App_img = new Property(4, String.class, "app_img", false, "APP_IMG");
        public final static Property App_download_path = new Property(5, String.class, "app_download_path", false, "APP_DOWNLOAD_PATH");
        public final static Property App_is_beta = new Property(6, int.class, "app_is_beta", false, "APP_IS_BETA");
        public final static Property App_isPorT = new Property(7, int.class, "app_isPorT", false, "APP_IS_POR_T");
        public final static Property App_downloadTime = new Property(8, String.class, "app_downloadTime", false, "APP_DOWNLOAD_TIME");
        public final static Property App_version_code = new Property(9, String.class, "app_version_code", false, "APP_VERSION_CODE");
    }


    public Eo_ApkDownloadInfoDao(DaoConfig config) {
        super(config);
    }
    
    public Eo_ApkDownloadInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"EO__APK_DOWNLOAD_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"APKID\" INTEGER," + // 1: apkid
                "\"APP_FILE_PATH\" TEXT," + // 2: appFilePath
                "\"APP_NAME\" TEXT," + // 3: app_name
                "\"APP_IMG\" TEXT," + // 4: app_img
                "\"APP_DOWNLOAD_PATH\" TEXT," + // 5: app_download_path
                "\"APP_IS_BETA\" INTEGER NOT NULL ," + // 6: app_is_beta
                "\"APP_IS_POR_T\" INTEGER NOT NULL ," + // 7: app_isPorT
                "\"APP_DOWNLOAD_TIME\" TEXT," + // 8: app_downloadTime
                "\"APP_VERSION_CODE\" TEXT);"); // 9: app_version_code
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"EO__APK_DOWNLOAD_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Eo_ApkDownloadInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long apkid = entity.getApkid();
        if (apkid != null) {
            stmt.bindLong(2, apkid);
        }
 
        String appFilePath = entity.getAppFilePath();
        if (appFilePath != null) {
            stmt.bindString(3, appFilePath);
        }
 
        String app_name = entity.getApp_name();
        if (app_name != null) {
            stmt.bindString(4, app_name);
        }
 
        String app_img = entity.getApp_img();
        if (app_img != null) {
            stmt.bindString(5, app_img);
        }
 
        String app_download_path = entity.getApp_download_path();
        if (app_download_path != null) {
            stmt.bindString(6, app_download_path);
        }
        stmt.bindLong(7, entity.getApp_is_beta());
        stmt.bindLong(8, entity.getApp_isPorT());
 
        String app_downloadTime = entity.getApp_downloadTime();
        if (app_downloadTime != null) {
            stmt.bindString(9, app_downloadTime);
        }
 
        String app_version_code = entity.getApp_version_code();
        if (app_version_code != null) {
            stmt.bindString(10, app_version_code);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Eo_ApkDownloadInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long apkid = entity.getApkid();
        if (apkid != null) {
            stmt.bindLong(2, apkid);
        }
 
        String appFilePath = entity.getAppFilePath();
        if (appFilePath != null) {
            stmt.bindString(3, appFilePath);
        }
 
        String app_name = entity.getApp_name();
        if (app_name != null) {
            stmt.bindString(4, app_name);
        }
 
        String app_img = entity.getApp_img();
        if (app_img != null) {
            stmt.bindString(5, app_img);
        }
 
        String app_download_path = entity.getApp_download_path();
        if (app_download_path != null) {
            stmt.bindString(6, app_download_path);
        }
        stmt.bindLong(7, entity.getApp_is_beta());
        stmt.bindLong(8, entity.getApp_isPorT());
 
        String app_downloadTime = entity.getApp_downloadTime();
        if (app_downloadTime != null) {
            stmt.bindString(9, app_downloadTime);
        }
 
        String app_version_code = entity.getApp_version_code();
        if (app_version_code != null) {
            stmt.bindString(10, app_version_code);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Eo_ApkDownloadInfo readEntity(Cursor cursor, int offset) {
        Eo_ApkDownloadInfo entity = new Eo_ApkDownloadInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // apkid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // appFilePath
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // app_name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // app_img
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // app_download_path
            cursor.getInt(offset + 6), // app_is_beta
            cursor.getInt(offset + 7), // app_isPorT
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // app_downloadTime
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // app_version_code
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Eo_ApkDownloadInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setApkid(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setAppFilePath(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setApp_name(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setApp_img(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setApp_download_path(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setApp_is_beta(cursor.getInt(offset + 6));
        entity.setApp_isPorT(cursor.getInt(offset + 7));
        entity.setApp_downloadTime(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setApp_version_code(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Eo_ApkDownloadInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Eo_ApkDownloadInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Eo_ApkDownloadInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
